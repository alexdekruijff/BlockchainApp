{"version":3,"sources":["Blockchain.js","Peer.js","Tut1.js","Tut2.js","Tut3.js","Tut4.js","Tut5.js","Tut6.js","App.js","reportWebVitals.js","index.js","images/Block.png","images/PoW.png","images/Hash_Function.png","images/P2P.png"],"names":["Blockchain","props","useState","data","setData","chain","setChain","useEffect","fetchChain","fetch","method","then","res","json","result","message","catch","err","console","log","updateTemper","temperdata","index","updatedChain","tutState","setTutState","headers","body","JSON","stringify","temperBlockPost","mineBlock","repairBlockPost","checkValid","valid","i","length","previousHash","substring","Array","join","hash","Stack","spacing","direction","map","block","Paper","elevation","Box","sx","p","display","justifyContent","alignItems","width","height","margin","TextField","label","value","error","InputProps","readOnly","disabled","onChange","e","target","IconButton","aria-label","onClick","nonce","date","borderRadius","Button","variant","rows","Peer","Tutorial1","Tutorial2","show","setShow","Fade","in","Tutorial3","Tutorial4","Tutorial5","Tutorial6","App","bgcolor","Grid","container","item","xs","sm","tutstate","tutorialSwitch","component","src","blockIm","hashFunc","proofow","p2p","imageSwitch","maxWidth","maxHeight","alt","videoId","mt","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9bfca46d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BuildIcon from '@mui/icons-material/Build';\nimport LinkIcon from '@mui/icons-material/Link';\nimport {Box, Stack, TextField, IconButton, Button, Paper} from '@mui/material';\n\n\nfunction Blockchain(props) {\n  const [data, setData] = useState('');\n  const [chain, setChain] = useState([]);\n\n\n  useEffect(() => {\n    fetchChain()\n  }, [])\n\n  const fetchChain = () => {\n    fetch(\"/main\", {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((result) => setChain(result.message))\n      .catch((err) => console.log('error'))\n  }\n\n  const addBlock = () => {\n    fetch(\"/block\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        data: data,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => setData(result.rows))\n      .catch((err) => console.log('error'))\n  }\n\n  const temperBlockPost = (temperdata, index) => {\n    fetch(\"/temper\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        index: index,\n        data: temperdata,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => setChain(result.message))\n      .catch((err) => console.log('error'))\n  }\n\n  const repairBlockPost = (index) => {\n    fetch(\"/pow\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        index: index,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => setChain(result.message))\n      .catch((err) => console.log('error'))\n  }\n\n  const updateTemper = (temperdata, index) => {\n    const updatedChain = [...chain]\n    updatedChain[index].data = temperdata\n    if (props.tutState === 1) {\n      props.setTutState(2)\n    }\n    setChain(updatedChain)\n    temperBlockPost(temperdata, index)\n  }\n\n  const buttonClick = () => {\n    addBlock()\n    fetchChain()\n    if (props.tutState === 0) {\n      props.setTutState(1)\n    } else if (props.tutState === 4) {\n      props.setTutState(5)\n    }\n  }\n\n  const mineBlock = (index) => {\n    repairBlockPost(index)\n    if (props.tutState === 2) {\n      props.setTutState(3)\n    } else if (props.tutState === 3) {\n      checkValid()\n    }\n  }\n\n  const checkValid = () => {\n    var valid = true;\n    for (let i = 0; i < chain.length;i++) {\n      if ((chain[i].previousHash.substring(0, 2) !== Array(3).join(\"0\")) && chain[i].hash.substring(0, 2) !== Array(3).join(\"0\")) {\n          valid = false;\n      }\n    }\n    if (valid){\n      props.setTutState(4)\n    }\n  }\n\n  return (\n    <Stack spacing={2} direction=\"row\">\n      {chain.map(block =>\n        <>\n          <Paper elevation={5}>\n            <Box sx={{ p: 2, display:'flex', justifyContent:'center', alignItems: 'center', width: 200, height: 'max-content'}}>\n              <Box sx={{ height: \"90%\", display:'flex', justifyContent:'center', alignItems: 'center' }}>\n                <Stack spacing={2}>\n                  <Box sx={{display:'flex', justifyContent:'center', margin: 1}}>\n                    Block {block.index}\n                  </Box>\n                  <Box>\n                    { (block.previousHash.substring(0, 2) !== Array(3).join(\"0\")) && (block.index !== 0) ?\n                      <TextField\n                        label=\"Previous Hash\"\n                        value={block.previousHash}\n                        error\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                      />\n                    :\n                      <TextField\n                        label=\"Previous Hash\"\n                        value={block.previousHash}\n                        disabled\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                      /> }\n                  </Box>\n                  <Box>\n                    <TextField\n                      label=\"Data\"\n                      value={block.data}\n                      onChange={(e) => updateTemper(e.target.value, block.index)}\n                    />\n                  </Box>\n                  <Box>\n                    { block.hash.substring(0, 2) !== Array(3).join(\"0\") ?\n                      <TextField\n                        label=\"Hash\"\n                        value={block.hash}\n                        error\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                      />\n                    :\n                    <TextField\n                      label=\"Hash\"\n                      value={block.hash}\n                      disabled\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    /> }\n                  </Box>\n                  <Box sx={{display:'flex', justifyContent:'center'}}>\n                    <Stack direction=\"row\" spacing={4} >\n                      <Box>\n                        { block.hash.substring(0, 2) !== Array(3).join(\"0\") ?\n                          <IconButton aria-label=\"repair\" onClick={() => mineBlock(block.index)}>\n                            <BuildIcon>\n                            </BuildIcon>\n                          </IconButton>\n                        :\n                          block.nonce\n                        }\n                      </Box>\n                      <Box sx={{display:'flex', justifyContent:'center', alignItems: 'center'}}>\n                        {block.date}\n                      </Box>\n                    </Stack>\n                  </Box>\n                </Stack>\n              </Box>\n            </Box>\n          </Paper>\n          <Box sx={{display:'flex', justifyContent:'center', alignItems: 'center'}}>\n            <LinkIcon>\n            </LinkIcon>\n          </Box>\n        </>\n      )}\n      <Paper elevation={5}>\n        <Box sx={{ p: 2, borderRadius: '5%', display:'flex', alignItems: 'center', width: 200, height: 'max-content'}}>\n          <Box sx={{ height: \"90%\", display:'flex', justifyContent:'center', alignItems: 'center' }}>\n            <Stack spacing={2}>\n              <Box>\n                <TextField\n                  label=\"Data\"\n                  value={data}\n                  onChange={(e) => setData(e.target.value)}\n                />\n              </Box>\n              <Box sx={{ display:'flex', justifyContent:'center' }}>\n                <Button variant=\"contained\" onClick={buttonClick}>Add Block</Button>\n              </Box>\n            </Stack>\n          </Box>\n        </Box>\n      </Paper>\n    </Stack>\n  );\n}\n\nexport default Blockchain;\n","import React, { useState, useEffect } from \"react\";\nimport LinkIcon from '@mui/icons-material/Link';\nimport {Box, Stack, TextField, Paper} from '@mui/material';\n\n\nfunction Peer(props) {\n  const [chain, setChain] = useState([]);\n\n\n  useEffect(() => {\n    fetchChain()\n  }, [])\n\n  const fetchChain = () => {\n    fetch(\"/peer\", {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((result) => setChain(result.message))\n      .catch((err) => console.log('error'))\n  }\n\n\n\n  return (\n    <Stack spacing={2} direction=\"row\">\n      {chain.map(block =>\n        <>\n          <Paper elevation={5}>\n            <Box sx={{ p: 2, display:'flex', justifyContent:'center', alignItems: 'center', width: 200, height: 'max-content'}}>\n              <Box sx={{ height: \"90%\", display:'flex', justifyContent:'center', alignItems: 'center' }}>\n                <Stack spacing={2}>\n                  <Box sx={{display:'flex', justifyContent:'center', margin: 1}}>\n                    Block {block.index}\n                  </Box>\n                  <Box>\n                    <TextField\n                      label=\"Previous Hash\"\n                      value={block.previousHash}\n                      disabled\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  </Box>\n                  <Box>\n                    <TextField\n                      label=\"Data\"\n                      value={block.data}\n                      disabled\n                    />\n                  </Box>\n                  <Box>\n                  <TextField\n                    label=\"Hash\"\n                    value={block.hash}\n                    disabled\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  </Box>\n                  <Box sx={{display:'flex', justifyContent:'center'}}>\n                    <Stack direction=\"row\" spacing={4} >\n                      <Box>\n                        {block.nonce}\n                      </Box>\n                      <Box sx={{display:'flex', justifyContent:'center', alignItems: 'center'}}>\n                        date\n                      </Box>\n                    </Stack>\n                  </Box>\n                </Stack>\n              </Box>\n            </Box>\n          </Paper>\n          <Box sx={{display:'flex', justifyContent:'center', alignItems: 'center'}}>\n            <LinkIcon>\n            </LinkIcon>\n          </Box>\n        </>\n      )}\n    </Stack>\n  );\n}\n\nexport default Peer;\n","import React from 'react';\nimport {Box} from '@mui/material';\n\nfunction Tutorial1() {\n  return (\n    <Box sx={{height:'100%'}}>\n      <h1> Blockchain </h1>\n      <p>Welcome to this Blockchain demo! Blockchain has grown incredibly popular\n      in the past few years. Blockchain technologies like cryptocurrencies and NFT's\n      have taken the world by storm. However, what is a blockchain and how does it actually\n      work? We will go step by step through the through the basic aspects of a blockchain in an interactive demo\n      so you might be able to invent your own blockchain creations!</p>\n\n    <p>Simply put, a blockchain is chain of blocks that each store some information. Each block stores some\n      data paired with an index, date, previous hash and a hash. The type of data stored in the blocks depends on\n      the blockhain. For example, Bitcoin stores a list with transactions and its details. But for our demo, it will\n      suffice to store some simple messages. We will go through the rest of information stored in a block in a second\n      but first, let's try to add a new block to the blockchain!</p>\n  </Box>\n  );\n}\n\nexport default Tutorial1;\n","import React, { useEffect, useState } from 'react';\nimport { Fade } from '@mui/material';\n\nfunction Tutorial2() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    <Fade in={show}>\n        <div>\n          <h1> Hash Function </h1>\n          <p>\n            Each time a new block is added to the blockchain, a hash is generated for that block. Similar to a fingerprint, a hash is a unique\n            identifier that represents the infomation stored in the block. In order to form a chain, the information stored on a new block is\n            linked to the hash of the previous block.</p>\n\n          <p>\n            The hash is generated by a hash function. This function can take any kind of input (e.g. a list of transactions, or a simple message)\n            and it will generate a code that looks somethat random. However, it is definitely not random! The hash depends on the information that\n            the block stores. If any information changes, so will the hash value. But, because all blocks are linked to the hash of the previous block,\n            the hashes of all the the blocks that come after it will also change!\n          </p>\n          <p>\n            Let's try to add some more blocks\n            and change the data in the first block we created to see what happens.\n          </p>\n        </div>\n    </Fade>\n  );\n}\n\nexport default Tutorial2;\n","import React, { useEffect, useState } from 'react';\nimport { Fade, Box } from '@mui/material';\n\nfunction Tutorial3() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    <Fade in={show}>\n        <Box sx={{height:'100%'}}>\n          <h1> Proof of Work </h1>\n          <p>See how the hashes of the following blocks changed as we edited the data in the block that comes before them? If we change something in\n          a block, its hash will change and cause a chain effect in the blocks that come after it. This is an important aspect in the security of blockhains</p>\n\n          <p>\n            We can see that the affected blocks now give an error for the hashes. As you might have already noticed, everytime we add a block,\n            the resulting hash begins with \"00\". The blockchain only accepts blocks that have a hash starting with two zeroes, this is called a proof of work. Whenever we\n            edit the information in a block, a new hash is generated which does not necessarily start with two zeroes, making all the following blocks also invalid. We cannot\n            simply tell the hash function to start with two zeroes, whatever hash is generated depends on the information we put into it. The only thing we can do is add some\n            value to the input and hope that the hash function gives us a hash starting with two zeroes. This is called the nonce value and it is displayed on the bottom\n            left of the of block.\n          </p>\n          <p>\n            The nonce values in the corrupted blocks are replaced by mining (wrench) icons, lets click on one to see what happens!\n          </p>\n        </Box>\n    </Fade>\n  );\n}\n\nexport default Tutorial3;\n","import React, { useEffect, useState } from 'react';\nimport { Fade } from '@mui/material';\n\nfunction Tutorial4() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    <Fade in={show}>\n        <div>\n          <h1> Mining </h1>\n          <p>\n            In order to find a nonce that gives us a valid hash, we have to try out a lot of different nonce values until we find a hash that starts with two zeroes.\n            This process is called mining. In our demo, we can mine new blocks pretty quickly because the hash only needs to start with two zeroes. However, as the number\n            of zeroes increases, so does the difficulty increase of finding a proper nonce value. For Bitcoin, this takes about 10 minutes per block. As we can see from\n            our blockchain below, if we change something in a block, all blocks that follow will have to be re-mined. Blockchains can easily contain hundreds of thousands\n            blocks, so if we wanted to change something in a blockchain, it would take huge amounts of time to recalculate all the blocks.\n          </p>\n\n          <p>Let's re-mine all the corrupted blocks to make our blockchain valid again.</p>\n        </div>\n    </Fade>\n  );\n}\n\nexport default Tutorial4;\n","import React, { useEffect, useState } from 'react';\nimport { Fade } from '@mui/material';\n\nfunction Tutorial5() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    <Fade in={show}>\n        <div>\n          <h1> P2P Network </h1>\n          <p>Now that our blockchain is valid again, we can connect to a network of other peers. Instead of storing the blockchain on\n            a central location, like a bank, blockchain uses a decentralized peer-to-peer network. If we scroll down, we can see two other\n            peers, each with their own blockchain. The blockchains of the peers are largely the same as ours except for the last block, containing\n            a transaction from Alice to Bob.</p>\n\n          <p>\n            In order to make a transaction on the blockchain, it has to be transmitted to miners who validate the transaction to see if both parties\n            agree. If everything checks out, the miners will record the transaction on a new block, transmit it to the P2P network and add it to everyone's\n            copy of the blockchain. Let's say we want to add a new block ourselves without having the data (e.g. a transaction) on it verified by other miners.\n            If we transmit the block to the peers on the network, there will be two versions of the blockchain: ours and the one of the peers. Because it is 2-to-1,\n            our version of the blockchain will not be accepted in the network as more than half of the peers reach concensus on their version. This way, any fraudulent\n            blocks or changes in the blockchain will not be taken up in the network.  \n          </p>\n        </div>\n    </Fade>\n  );\n}\n\nexport default Tutorial5;\n","import React, { useEffect, useState } from 'react';\nimport { Fade } from '@mui/material';\n\nfunction Tutorial6() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    <Fade in={show}>\n        <div>\n          <h1> End </h1>\n          <p>\n            Blockchain is often associated with cryptocurrencies, however as we have seen from the demo,\n            money transactions are just one type of data that can be stored on a block. The beauty of blockchain is that we can track anything and be\n            sure that the information is not fraudulent. The labour process of a product can be tracked, peers can trade energy in a smart energy grid,\n            or digital voting could be securely registered. Due to the secure and decentralized nature of blockchain, transactions can be made without the need for validation\n            from a central authority. By finding new and creative ways of applying blockchain, we can change the world to be more fair and transparant.\n          </p>\n\n          <p>\n            Thank you for learning about blockchain!\n          </p>\n        </div>\n    </Fade>\n  );\n}\n\nexport default Tutorial6;\n","    /* global chrome */\nimport Blockchain from './Blockchain';\nimport Peer from './Peer';\nimport React, { useState } from \"react\";\nimport {Box, Grid, Paper} from '@mui/material';\nimport Tutorial1 from './Tut1';\nimport Tutorial2 from './Tut2';\nimport Tutorial3 from './Tut3';\nimport Tutorial4 from './Tut4';\nimport Tutorial5 from './Tut5';\nimport Tutorial6 from './Tut6';\nimport blockIm from './images/Block.png';\nimport hashFunc from './images/Hash_Function.png';\nimport proofow from './images/PoW.png';\nimport p2p from './images/P2P.png';\nimport YouTube from 'react-youtube';\n\nfunction App() {\n  const [tutState, setTutState] = useState(0);\n\n  const imageSwitch = (tutstate) => {\n    switch(tutstate) {\n      case 0:\n        return blockIm;\n      case 1:\n        return hashFunc;\n      case 2:\n        return proofow;\n      case 3:\n        return proofow;\n      case 4:\n        return p2p;\n      default:\n        return blockIm;\n    }\n  }\n\n  const tutorialSwitch = (tutstate) => {\n    switch(tutstate) {\n      case 0:\n        return <Tutorial1 />;\n      case 1:\n        return <Tutorial2 />;\n      case 2:\n        return <Tutorial3 />;\n      case 3:\n        return <Tutorial4 />;\n      case 4:\n        return <Tutorial5 />;\n      case 5:\n        return <Tutorial6 />;\n      default:\n        return <Tutorial1 />;\n    }\n  }\n  return (\n    <>\n      <Box sx={{bgcolor: \"#f5f5f5\", height: '100%', display:\"flex\"}}>\n        <Grid container spacing={4} sx={{ p:'2%', height: '100%' }}>\n          <Grid item xs={12} sm={6} sx={{ height: '50vh' }}>\n            <Paper elevation={5} sx={{p: 2, height: '100%'}}>\n              {tutorialSwitch(tutState)}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6} sx={{ height: '50vh' }}>\n            <Paper elevation={5} sx={{p: 2, height: '100%', display:'flex', justifyContent:'center', alignItems: 'center'}}>\n              { tutState !== 5 ?\n                  <Box\n                    component=\"img\"\n                    src={imageSwitch(tutState)}\n                    sx={{maxWidth: \"90%\", maxHeight: \"90%\"}}\n                    alt=\"Thumb\"\n                  />\n                :\n                  <YouTube videoId={\"rnI_P48Zcjc\"}/>\n              }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12} sx={{p: 2, mt: '2vh', height: '50vh', maxWidth: '100vw', overflow: 'auto', display:'flex', alignItems: 'center'}}>\n            <Blockchain tutState={tutState} setTutState={setTutState} />\n          </Grid>\n          { tutState === 4 ?\n            <>\n              <Grid item xs={12} sm={12} sx={{p: 2, mt: '2vh', height: '50vh', maxWidth: '100vw', overflow: 'auto', display:'flex', alignItems: 'center'}}>\n                <Peer tutState={tutState} setTutState={setTutState} />\n              </Grid>\n              <Grid item xs={12} sm={12} sx={{p: 2, mt: '2vh', height: '50vh', maxWidth: '100vw', overflow: 'auto', display:'flex', alignItems: 'center'}}>\n                <Peer tutState={tutState} setTutState={setTutState} />\n              </Grid>\n            </>\n          :\n            null\n          }\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/Block.c3addd1b.png\";","module.exports = __webpack_public_path__ + \"static/media/PoW.4ee09de2.png\";","module.exports = __webpack_public_path__ + \"static/media/Hash_Function.4c8c8f4c.png\";","module.exports = __webpack_public_path__ + \"static/media/P2P.2260a933.png\";"],"sourceRoot":""}